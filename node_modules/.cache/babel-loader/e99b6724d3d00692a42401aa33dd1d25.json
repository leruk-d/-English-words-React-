{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/InputWordListAdd/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Input.scss\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputForWord(props) {\n  _s();\n\n  const [imputData, setImputData] = useState({\n    word: \"\",\n    transcription: \"\",\n    translation: \"\"\n  });\n  const [errors, setErrors] = useState({\n    word: false,\n    transcription: false,\n    translation: false\n  });\n\n  const addImputData = event => {\n    setImputData({ ...imputData,\n      [event.target.name]: event.target.value\n    }); //  const {word, transcription, translation} = imputData;\n    //  const length = event.target.value.trim().length;\n\n    setErrors({ ...errors,\n      [event.target.name]: length < 1\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"rowAddWord\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: word,\n        onChange: e => addImputData(e),\n        name: \"word\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: transcription,\n        onChange: e => addImputData(e),\n        name: \"transcription\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: translation,\n        onChange: e => addImputData(e),\n        name: \"translation\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ButtonDel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n\n_s(InputForWord, \"ZqUB13WKTudsDvFY44/Kjdm5blA=\");\n\n_c = InputForWord;\nexport default InputForWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForWord\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/InputWordListAdd/Input.jsx"],"names":["React","useState","ButtonDel","ButtonAdd","InputForWord","props","imputData","setImputData","word","transcription","translation","errors","setErrors","addImputData","event","target","name","value","length","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC;AAC3CO,IAAAA,IAAI,EAAC,EADsC;AAE3CC,IAAAA,aAAa,EAAC,EAF6B;AAG3CC,IAAAA,WAAW,EAAC;AAH+B,GAAD,CAAxC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBX,QAAQ,CAAC;AAC/BO,IAAAA,IAAI,EAAE,KADyB;AAE/BC,IAAAA,aAAa,EAAE,KAFgB;AAG/BC,IAAAA,WAAW,EAAE;AAHkB,GAAD,CAAnC;;AAKA,QAAMG,YAAY,GAAGC,KAAK,IAAG;AAE9BP,IAAAA,YAAY,CAAC,EACV,GAAGD,SADO;AAEV,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAFxB,KAAD,CAAZ,CAF8B,CAO3B;AACA;;AACAL,IAAAA,SAAS,CAAC,EACF,GAAGD,MADD;AAEF,OAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBE,MAAM,GAAG;AAF5B,KAAD,CAAT;AAID,GAbD;;AAgBA,sBAEI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,4BACA;AAAA,6BACF;AACA,QAAA,SAAS,EAAC,SADV;AAEA,QAAA,WAAW,EAAC,OAFZ;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,KAAK,EAAEV,IAJP;AAKA,QAAA,QAAQ,EAAEW,CAAC,IAAEN,YAAY,CAACM,CAAD,CALzB;AAMA,QAAA,IAAI,EAAC,MANL;AAOA,QAAA,QAAQ;AAPR;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADA,eAYI;AAAA,6BACN;AAAO,QAAA,SAAS,EAAC,SAAjB;AACA,QAAA,WAAW,EAAC,OADZ;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,KAAK,EAAEV,aAHP;AAIA,QAAA,QAAQ,EAAEU,CAAC,IAAEN,YAAY,CAACM,CAAD,CAJzB;AAKA,QAAA,IAAI,EAAC,eALL;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAZJ,eAsBI;AAAA,6BACP;AAAO,QAAA,SAAS,EAAC,SAAjB;AACA,QAAA,WAAW,EAAC,OADZ;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,KAAK,EAAET,WAHP;AAIA,QAAA,QAAQ,EAAES,CAAC,IAAEN,YAAY,CAACM,CAAD,CAJzB;AAKA,QAAA,IAAI,EAAC,aALL;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAtBJ,eAgCC;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAhCD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0CD;;GArEQf,Y;;KAAAA,Y;AAuET,eAAeA,YAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Input.scss\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\n\nfunction InputForWord(props) {\n  const [imputData, setImputData]=useState({\nword:\"\",\ntranscription:\"\",\ntranslation:\"\"\n  });\n  const [errors, setErrors] =useState({  \n       word: false,\n       transcription: false,\n       translation: false})\n\n  const addImputData = event =>{\n\n setImputData({\n    ...imputData,\n    [event.target.name]: event.target.value\n  });\n\n    //  const {word, transcription, translation} = imputData;\n    //  const length = event.target.value.trim().length;\n    setErrors({\n            ...errors,\n            [event.target.name]: length < 1\n        });\n  }\n \n\n  return (\n\n      <tr className=\"rowAddWord\">\n      <td>\n    <input \n    className=\"addWord\" \n    placeholder=\"Enter\" \n    type=\"text\"\n    value={word} \n    onChange={e=>addImputData(e)} \n    name=\"word\"\n    required\n    />\n     </td>\n          <td>\n    <input className=\"addWord\" \n    placeholder=\"Enter\" \n    type=\"text\" \n    value={transcription} \n    onChange={e=>addImputData(e)} \n    name=\"transcription\"\n    required\n    />\n     </td>\n          <td>\n   <input className=\"addWord\" \n   placeholder=\"Enter\"  \n   type=\"text\" \n   value={translation} \n   onChange={e=>addImputData(e)} \n   name=\"translation\" \n   required\n   />\n     </td>\n       <td>\n        <div className=\"buttons\">\n        <ButtonAdd/>\n        <ButtonDel />\n        </div>\n      </td>\n        </tr>\n  );\n}\n\nexport default InputForWord;\n"]},"metadata":{},"sourceType":"module"}