{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/WordsList/TableRow.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet words = [{\n  \"id\": \"peace\",\n  \"english\": \"peace\",\n  \"transcription\": \"[ piːs ]\",\n  \"russian\": \"мир\"\n}, {\n  \"id\": \"friendship\",\n  \"english\": \"friendship\",\n  \"transcription\": \"[ ˈfrendʃɪp ]\",\n  \"russian\": \"дружба\"\n}, {\n  \"id\": \"gum\",\n  \"english\": \"gum\",\n  \"transcription\": \"[ ɡʌm ]\",\n  \"russian\": \"жвачка\"\n}];\n\nfunction TableRow() {\n  const rows = words.map(function (word) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: word.english\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: word.transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: word.russian\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, word.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  });\n}\n\n_c = TableRow;\nexport default TableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/WordsList/TableRow.jsx"],"names":["React","words","TableRow","rows","map","word","english","transcription","russian","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,KAAK,GAAC,CACR;AAAC,QAAK,OAAN;AAAe,aAAU,OAAzB;AAAkC,mBAAgB,UAAlD;AAA8D,aAAU;AAAxE,CADQ,EAER;AAAC,QAAK,YAAN;AAAoB,aAAU,YAA9B;AAA4C,mBAAgB,eAA5D;AAA4E,aAAU;AAAtF,CAFQ,EAGR;AAAC,QAAK,KAAN;AAAa,aAAU,KAAvB;AAA8B,mBAAgB,SAA9C;AAAwD,aAAU;AAAlE,CAHQ,CAAV;;AAKA,SAASC,QAAT,GAAoB;AACnB,QAAMC,IAAI,GAAGF,KAAK,CAACG,GAAN,CAAU,UAASC,IAAT,EAAe;AACrC,wBAAO;AAAA,8BACH;AAAA,kBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,cADG,eAEG;AAAA,kBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG;AAAA,kBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA,OAASH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAKA,GANY,CAAb;AAQA;;KATQP,Q;AAWT,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nlet words=[\n  {\"id\":\"peace\", \"english\":\"peace\", \"transcription\":\"[ piːs ]\", \"russian\":\"мир\" },\n  {\"id\":\"friendship\", \"english\":\"friendship\", \"transcription\":\"[ ˈfrendʃɪp ]\",\"russian\":\"дружба\" },\n  {\"id\":\"gum\", \"english\":\"gum\", \"transcription\":\"[ ɡʌm ]\",\"russian\":\"жвачка\"}\n];\nfunction TableRow() {\n\tconst rows = words.map(function(word) {\n\t\treturn <tr key={word.id}>\n\t\t    <td>{word.english}</td>\n            <td>{word.transcription}</td>\n            <td>{word.russian}</td>\n\t\t</tr>;\n\t});\n\t\n}\n\nexport default TableRow;"]},"metadata":{},"sourceType":"module"}