{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/WordsList/TableRow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\nimport ButtonEdit from \"../Buttons/ButtonEdit\";\nimport \"./TableRow.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet words = [{\n  id: \"peace\",\n  english: \"peace\",\n  transcription: \"[ piːs ]\",\n  russian: \"мир\"\n}, {\n  id: \"friendship\",\n  english: \"friendship\",\n  transcription: \"[ ˈfrendʃɪp ]\",\n  russian: \"дружба\"\n}, {\n  id: \"gum\",\n  english: \"gum\",\n  transcription: \"[ ɡʌm ]\",\n  russian: \"жвачка\"\n}];\n\nfunction TableRow() {\n  _s();\n\n  const [pressed, setPressed] = useState(false);\n\n  const handleChange = () => {\n    setPressed(!pressed);\n  };\n\n  return words.map((word, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: handleChange,\n      children: pressed ? /*#__PURE__*/_jsxDEV(\"input\", {\n        value: word.english\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this) : word.english\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: handleChange,\n      children: pressed ? /*#__PURE__*/_jsxDEV(\"input\", {\n        value: word.transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this) : word.transcription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      onClick: handleChange,\n      children: i === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n        value: word.russian\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this) : word.russian\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [i === 0 && /*#__PURE__*/_jsxDEV(ButtonAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(ButtonEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonDel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, word.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n}\n\n_s(TableRow, \"DPHG9W12kHGq8FFQtt6pAxE5+Z0=\");\n\n_c = TableRow;\nexport default TableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/WordsList/TableRow.jsx"],"names":["React","useState","ButtonDel","ButtonAdd","ButtonEdit","words","id","english","transcription","russian","TableRow","pressed","setPressed","handleChange","map","word","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAO,iBAAP;;AAEA,IAAIC,KAAK,GAAG,CACV;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,OAAO,EAAE,OAAxB;AAAiCC,EAAAA,aAAa,EAAE,UAAhD;AAA4DC,EAAAA,OAAO,EAAE;AAArE,CADU,EAEV;AACEH,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,OAAO,EAAE,YAFX;AAGEC,EAAAA,aAAa,EAAE,eAHjB;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAFU,EAQV;AAAEH,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,OAAO,EAAE,KAAtB;AAA6BC,EAAAA,aAAa,EAAE,SAA5C;AAAuDC,EAAAA,OAAO,EAAE;AAAhE,CARU,CAAZ;;AAWA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMY,YAAY,GAAG,MAAM;AACzBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAIA,SAAON,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACf;AAAA,4BACE;AAAI,MAAA,OAAO,EAAEH,YAAb;AAAA,gBACGF,OAAO,gBAAG;AAAO,QAAA,KAAK,EAAEI,IAAI,CAACR;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAH,GAAoCQ,IAAI,CAACR;AADnD;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,OAAO,EAAEM,YAAb;AAAA,gBACGF,OAAO,gBAAG;AAAO,QAAA,KAAK,EAAEI,IAAI,CAACP;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAH,GAA0CO,IAAI,CAACP;AADzD;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAI,MAAA,OAAO,EAAEK,YAAb;AAAA,gBACGG,CAAC,KAAK,CAAN,gBAAU;AAAO,QAAA,KAAK,EAAED,IAAI,CAACN;AAAnB;AAAA;AAAA;AAAA;AAAA,cAAV,GAA2CM,IAAI,CAACN;AADnD;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACGO,CAAC,KAAK,CAAN,iBAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBADd,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,KAASD,IAAI,CAACT,EAAd;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAoBD;;GA1BQI,Q;;KAAAA,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\nimport ButtonEdit from \"../Buttons/ButtonEdit\";\nimport \"./TableRow.scss\";\n\nlet words = [\n  { id: \"peace\", english: \"peace\", transcription: \"[ piːs ]\", russian: \"мир\" },\n  {\n    id: \"friendship\",\n    english: \"friendship\",\n    transcription: \"[ ˈfrendʃɪp ]\",\n    russian: \"дружба\",\n  },\n  { id: \"gum\", english: \"gum\", transcription: \"[ ɡʌm ]\", russian: \"жвачка\" },\n];\n\nfunction TableRow() {\n  const [pressed, setPressed] = useState(false);\n  const handleChange = () => {\n    setPressed(!pressed);\n  };\n\n  return words.map((word, i) => (\n    <tr key={word.id}>\n      <td onClick={handleChange}>\n        {pressed ? <input value={word.english} /> : word.english}\n      </td>\n      <td onClick={handleChange}>\n        {pressed ? <input value={word.transcription} /> : word.transcription}\n      </td>\n      <td onClick={handleChange}>\n        {i === 0 ? <input value={word.russian} /> : word.russian}\n      </td>\n      <td>\n        <div className=\"buttons\">\n          {i === 0 && <ButtonAdd />}\n          <ButtonEdit />\n          <ButtonDel />\n        </div>\n      </td>\n    </tr>\n  ));\n}\n\nexport default TableRow;\n"]},"metadata":{},"sourceType":"module"}