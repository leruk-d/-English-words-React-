{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/WordsList/WordsList.jsx\";\nimport React from 'react';\nimport './WordList.scss';\nimport ButtonDel from '../Buttons/ButtonDelete';\nimport ButtonAdd from '../Buttons/ButtonAdd';\nimport ButtonEdit from '../Buttons/ButtonEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [{\n  id: 'peace',\n  english: 'peace',\n  transcription: '[ piːs ]',\n  russian: 'мир'\n}, {\n  id: 'friendship',\n  english: 'friendship',\n  transcription: '[ ˈfrendʃɪp ]',\n  russian: 'дружба'\n}, {\n  id: 'gum',\n  english: 'gum',\n  transcription: '[ ɡʌm ]',\n  russian: 'жвачка'\n}];\n\nfunction WordList() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        className: \"table-name\",\n        children: \"Words List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Translate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: words.map((word, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: i === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: word.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this) : word.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: word.transcription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 37\n            }, this) : word.transcription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: word.russian\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this) : word.russian\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [i === 0 && /*#__PURE__*/_jsxDEV(ButtonAdd, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ButtonEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ButtonDel, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, word.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = WordList;\nexport default WordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/WordsList/WordsList.jsx"],"names":["React","ButtonDel","ButtonAdd","ButtonEdit","words","id","english","transcription","russian","WordList","map","word","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,KAAK,GAAG,CACV;AACIC,EAAAA,EAAE,EAAE,OADR;AAEIC,EAAAA,OAAO,EAAE,OAFb;AAGIC,EAAAA,aAAa,EAAE,UAHnB;AAIIC,EAAAA,OAAO,EAAE;AAJb,CADU,EAOV;AACIH,EAAAA,EAAE,EAAE,YADR;AAEIC,EAAAA,OAAO,EAAE,YAFb;AAGIC,EAAAA,aAAa,EAAE,eAHnB;AAIIC,EAAAA,OAAO,EAAE;AAJb,CAPU,EAaV;AAAEH,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,OAAO,EAAE,KAAtB;AAA6BC,EAAAA,aAAa,EAAE,SAA5C;AAAuDC,EAAAA,OAAO,EAAE;AAAhE,CAbU,CAAd;;AAgBA,SAASC,QAAT,GAAoB;AAChB,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACI;AAAS,QAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUI;AAAA,kBACKL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACP;AAAA,kCACI;AAAA,sBACKA,CAAC,KAAK,CAAN,gBACG;AAAO,cAAA,KAAK,EAAED,IAAI,CAACL;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADH,GAGGK,IAAI,CAACL;AAJb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI;AAAA,sBACKM,CAAC,KAAK,CAAN,gBACG;AAAO,cAAA,KAAK,EAAED,IAAI,CAACJ;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADH,GAGGI,IAAI,CAACJ;AAJb;AAAA;AAAA;AAAA;AAAA,kBARJ,eAeI;AAAA,sBACKK,CAAC,KAAK,CAAN,gBACG;AAAO,cAAA,KAAK,EAAED,IAAI,CAACH;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADH,GAGGG,IAAI,CAACH;AAJb;AAAA;AAAA;AAAA;AAAA,kBAfJ,eAsBI;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,yBACKI,CAAC,KAAK,CAAN,iBAAW,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,sBADhB,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAtBJ;AAAA,WAASD,IAAI,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH;;KAlDQI,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport './WordList.scss'\nimport ButtonDel from '../Buttons/ButtonDelete'\nimport ButtonAdd from '../Buttons/ButtonAdd'\nimport ButtonEdit from '../Buttons/ButtonEdit'\n\nconst words = [\n    {\n        id: 'peace',\n        english: 'peace',\n        transcription: '[ piːs ]',\n        russian: 'мир',\n    },\n    {\n        id: 'friendship',\n        english: 'friendship',\n        transcription: '[ ˈfrendʃɪp ]',\n        russian: 'дружба',\n    },\n    { id: 'gum', english: 'gum', transcription: '[ ɡʌm ]', russian: 'жвачка' },\n]\n\nfunction WordList() {\n    return (\n        <div className=\"main_table\">\n            <table className=\"table\">\n                <caption className=\"table-name\">Words List</caption>\n                <thead>\n                    <tr>\n                        <th>Word</th>\n                        <th>Transcription</th>\n                        <th>Translate</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {words.map((word, i) => (\n                        <tr key={word.id}>\n                            <td>\n                                {i === 0 ? (\n                                    <input value={word.english} />\n                                ) : (\n                                    word.english\n                                )}\n                            </td>\n                            <td>\n                                {i === 0 ? (\n                                    <input value={word.transcription} />\n                                ) : (\n                                    word.transcription\n                                )}\n                            </td>\n                            <td>\n                                {i === 0 ? (\n                                    <input value={word.russian} />\n                                ) : (\n                                    word.russian\n                                )}\n                            </td>\n                            <td>\n                                <div className=\"buttons\">\n                                    {i === 0 && <ButtonAdd />}\n                                    <ButtonEdit />\n                                    <ButtonDel />\n                                </div>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default WordList\n"]},"metadata":{},"sourceType":"module"}