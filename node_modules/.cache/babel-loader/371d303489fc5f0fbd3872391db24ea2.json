{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/Card/ButtonTranslate.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport \"./ButtonTranslate.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ButtonTranslate(props) {\n  _s();\n\n  const buttonTranslateRef = useRef(); //  ref проставляется в компоненте только после первого рендера, и в useEffect у меня этот ref используется, но он пока что не успел добавиться в компонент.\n  // Чтобы избежать ошибки, нужно проверить в useEffect, что ref уже точно есть и с ним можно работать:\n\n  useEffect(() => {\n    if (buttonTranslateRef === null || buttonTranslateRef === void 0 ? void 0 : buttonTranslateRef.current) {\n      var _buttonTranslateRef$c, _buttonTranslateRef$c2;\n\n      buttonTranslateRef === null || buttonTranslateRef === void 0 ? void 0 : (_buttonTranslateRef$c = buttonTranslateRef.current) === null || _buttonTranslateRef$c === void 0 ? void 0 : (_buttonTranslateRef$c2 = _buttonTranslateRef$c.focus) === null || _buttonTranslateRef$c2 === void 0 ? void 0 : _buttonTranslateRef$c2.call(_buttonTranslateRef$c);\n    }\n  }, [buttonTranslateRef === null || buttonTranslateRef === void 0 ? void 0 : buttonTranslateRef.current]);\n  return !props.pressed ? /*#__PURE__*/_jsxDEV(\"button\", {\n    ref: buttonTranslateRef,\n    className: \"button\",\n    onClick: props.onClick,\n    children: \"\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: props.onClick,\n    children: props.russian\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ButtonTranslate, \"4J92UKIV7LVO7wiU/H0K6MzGmWc=\");\n\n_c = ButtonTranslate;\nexport default ButtonTranslate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonTranslate\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/Card/ButtonTranslate.jsx"],"names":["React","useEffect","useRef","ButtonTranslate","props","buttonTranslateRef","current","focus","pressed","onClick","russian"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAO,wBAAP;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9B,QAAMC,kBAAkB,GAAGH,MAAM,EAAjC,CAD8B,CAG9B;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,kBAAJ,aAAIA,kBAAJ,uBAAIA,kBAAkB,CAAEC,OAAxB,EAAiC;AAAA;;AAC/BD,MAAAA,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,qCAAAA,kBAAkB,CAAEC,OAApB,0GAA6BC,KAA7B;AACD;AACF,GAJQ,EAIN,CAACF,kBAAD,aAACA,kBAAD,uBAACA,kBAAkB,CAAEC,OAArB,CAJM,CAAT;AAMA,SAAO,CAACF,KAAK,CAACI,OAAP,gBACL;AAAQ,IAAA,GAAG,EAAEH,kBAAb;AAAiC,IAAA,SAAS,EAAC,QAA3C;AAAoD,IAAA,OAAO,EAAED,KAAK,CAACK,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL;AAAK,IAAA,OAAO,EAAEL,KAAK,CAACK,OAApB;AAAA,cAA8BL,KAAK,CAACM;AAApC;AAAA;AAAA;AAAA;AAAA,UALF;AAOD;;GAnBQP,e;;KAAAA,e;AAqBT,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./ButtonTranslate.scss\";\n\nfunction ButtonTranslate(props) {\n  const buttonTranslateRef = useRef();\n\n  //  ref проставляется в компоненте только после первого рендера, и в useEffect у меня этот ref используется, но он пока что не успел добавиться в компонент.\n  // Чтобы избежать ошибки, нужно проверить в useEffect, что ref уже точно есть и с ним можно работать:\n\n  useEffect(() => {\n    if (buttonTranslateRef?.current) {\n      buttonTranslateRef?.current?.focus?.();\n    }\n  }, [buttonTranslateRef?.current]);\n\n  return !props.pressed ? (\n    <button ref={buttonTranslateRef} className=\"button\" onClick={props.onClick}>\n      Проверить\n    </button>\n  ) : (\n    <div onClick={props.onClick}>{props.russian}</div>\n  );\n}\n\nexport default ButtonTranslate;\n"]},"metadata":{},"sourceType":"module"}