{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/CardContainer/CardContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport Card from \"../Card/Card\";\nimport ButtonPrevious from \"../ButtonPrevious/ButtonPrevious\";\nimport ButtonNext from \"../ButtonNext/ButtonNext\";\nimport \"./CardContainer.scss\";\nimport { observer, inject } from \"mobx-react\";\nimport Loading from \"../Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = inject([\"dataStore\"])(observer(_s(_ref => {\n  var _data$selectedCardInd2;\n\n  _s();\n\n  let {\n    dataStore\n  } = _ref;\n  const [selectedCardIndex, setSelectedCardIndex] = useState(0);\n  const [data, updateTranslationState] = useState(dataStore.data);\n  const [wordsCount, setWordsCount] = useState(0);\n\n  const handleClickNext = () => {\n    const newIdx = selectedCardIndex + 1;\n\n    if (newIdx < dataStore.data.length) {\n      setSelectedCardIndex(newIdx);\n    }\n  };\n\n  const handleClickPrev = () => {\n    const newIndex = selectedCardIndex - 1;\n\n    if (newIndex >= 0) {\n      setSelectedCardIndex(newIndex);\n    }\n  };\n\n  const addToWords = useCallback(() => setWordsCount(wordsCount + 1), [wordsCount]);\n\n  const handleClickTranslation = isTranslationShown => {\n    const dataCopy = [...data];\n    dataCopy[selectedCardIndex].isTranslationShow = !dataCopy[selectedCardIndex].isTranslationShow;\n    updateTranslationState(dataCopy);\n\n    if (!isTranslationShown) {\n      addToWords();\n    }\n  };\n\n  if (!dataStore.data.length) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"wordsCount\",\n      children: [\" \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u043E \", wordsCount, \" \\u0441\\u043B\\u043E\\u0432\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oneCard\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPrevious, {\n        onClick: handleClickPrev,\n        disabled: selectedCardIndex === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: dataStore.data[selectedCardIndex].english,\n        transcription: dataStore.data[selectedCardIndex].transcription,\n        translation: dataStore.data[selectedCardIndex].russian,\n        onClick: () => {\n          var _data$selectedCardInd;\n\n          return handleClickTranslation((_data$selectedCardInd = data[selectedCardIndex]) === null || _data$selectedCardInd === void 0 ? void 0 : _data$selectedCardInd.isTranslationShow);\n        },\n        isTranslationShown: (_data$selectedCardInd2 = data[selectedCardIndex]) === null || _data$selectedCardInd2 === void 0 ? void 0 : _data$selectedCardInd2.isTranslationShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonNext, {\n        onClick: handleClickNext,\n        disabled: selectedCardIndex === dataStore.data.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"numberCard\",\n      children: [selectedCardIndex + 1, \"/\", dataStore.data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}, \"0syMyEMMExOdedpCcqqTQr7LWjk=\")));\nexport default CardContainer;","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/CardContainer/CardContainer.jsx"],"names":["React","useState","useCallback","Card","ButtonPrevious","ButtonNext","observer","inject","Loading","CardContainer","dataStore","selectedCardIndex","setSelectedCardIndex","data","updateTranslationState","wordsCount","setWordsCount","handleClickNext","newIdx","length","handleClickPrev","newIndex","addToWords","handleClickTranslation","isTranslationShown","dataCopy","isTranslationShow","english","transcription","russian"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Card from \"../Card/Card\";\nimport ButtonPrevious from \"../ButtonPrevious/ButtonPrevious\";\nimport ButtonNext from \"../ButtonNext/ButtonNext\";\nimport \"./CardContainer.scss\";\nimport { observer, inject } from \"mobx-react\";\nimport Loading from \"../Loading/Loading\";\n\nconst CardContainer = inject([\"dataStore\"])(\n  observer(({ dataStore }) => {\n    const [selectedCardIndex, setSelectedCardIndex] = useState(0);\n    const [data, updateTranslationState] = useState(dataStore.data);\n    const [wordsCount, setWordsCount] = useState(0);\n\n    const handleClickNext = () => {\n      const newIdx = selectedCardIndex + 1;\n      if (newIdx < dataStore.data.length) {\n        setSelectedCardIndex(newIdx);\n      }\n    };\n\n    const handleClickPrev = () => {\n      const newIndex = selectedCardIndex - 1;\n      if (newIndex >= 0) {\n        setSelectedCardIndex(newIndex);\n      }\n    };\n\n    const addToWords = useCallback(\n      () => setWordsCount(wordsCount + 1),\n      [wordsCount]\n    );\n\n    const handleClickTranslation = (isTranslationShown) => {\n      const dataCopy = [...data];\n      dataCopy[selectedCardIndex].isTranslationShow =\n        !dataCopy[selectedCardIndex].isTranslationShow;\n      updateTranslationState(dataCopy);\n      if (!isTranslationShown) {\n        addToWords();\n      }\n    };\n\n    if (!dataStore.data.length) return <Loading />;\n\n    return (\n      <div className=\"cardContainer\">\n        <span className=\"wordsCount\"> изучено {wordsCount} слов</span>\n        <div className=\"oneCard\">\n          <ButtonPrevious\n            onClick={handleClickPrev}\n            disabled={selectedCardIndex === 0}\n          />\n          <Card\n            word={dataStore.data[selectedCardIndex].english}\n            transcription={dataStore.data[selectedCardIndex].transcription}\n            translation={dataStore.data[selectedCardIndex].russian}\n            onClick={() =>\n              handleClickTranslation(data[selectedCardIndex]?.isTranslationShow)\n            }\n            isTranslationShown={data[selectedCardIndex]?.isTranslationShow}\n          ></Card>\n          <ButtonNext\n            onClick={handleClickNext}\n            disabled={selectedCardIndex === dataStore.data.length - 1}\n          />\n        </div>\n        <span className=\"numberCard\">\n          {selectedCardIndex + 1}/{dataStore.data.length}\n        </span>\n      </div>\n    );\n  })\n);\n\nexport default CardContainer;\n"]},"metadata":{},"sourceType":"module"}