{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/WordsList/WordsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"./WordList.scss\";\nimport TableRow from \"./TableRow\";\nimport EditableRow from \"./EditableRow\";\nimport DataContext from \"../../Context/Context\"; // let words = [\n//   { id: \"peace\", english: \"peace\", transcription: \"[ piːs ]\", russian: \"мир\" },\n//   {\n//     id: \"friendship\",\n//     english: \"friendship\",\n//     transcription: \"[ ˈfrendʃɪp ]\",\n//     russian: \"дружба\",\n//   },\n//   { id: \"gum\", english: \"gum\", transcription: \"[ ɡʌm ]\", russian: \"жвачка\" },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WordList() {\n  _s();\n\n  const {\n    words\n  } = useContext(DataContext);\n  console.log(words);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_table\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        className: \"table-name\",\n        children: \"Words List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \" Word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"Translate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(EditableRow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), words.map(word => /*#__PURE__*/_jsxDEV(TableRow, {\n          word: word.english,\n          transcription: word.transcription,\n          translation: word.russian\n        }, word.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WordList, \"rN6hOINnbfe6R8NYL3idk2wCGRY=\");\n\n_c = WordList;\nexport default WordList;\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/WordsList/WordsList.jsx"],"names":["React","useContext","TableRow","EditableRow","DataContext","WordList","words","console","log","map","word","english","transcription","russian","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,iBAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAYL,UAAU,CAACG,WAAD,CAA5B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGA,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,UAAA,IAAI,EAAEA,IAAI,CAACC,OAFb;AAGE,UAAA,aAAa,EAAED,IAAI,CAACE,aAHtB;AAIE,UAAA,WAAW,EAAEF,IAAI,CAACG;AAJpB,WACOH,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA7BQT,Q;;KAAAA,Q;AA8BT,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport \"./WordList.scss\";\nimport TableRow from \"./TableRow\";\nimport EditableRow from \"./EditableRow\";\nimport DataContext from \"../../Context/Context\";\n\n// let words = [\n//   { id: \"peace\", english: \"peace\", transcription: \"[ piːs ]\", russian: \"мир\" },\n//   {\n//     id: \"friendship\",\n//     english: \"friendship\",\n//     transcription: \"[ ˈfrendʃɪp ]\",\n//     russian: \"дружба\",\n//   },\n\n//   { id: \"gum\", english: \"gum\", transcription: \"[ ɡʌm ]\", russian: \"жвачка\" },\n// ];\n\nfunction WordList() {\n  const { words } = useContext(DataContext);\n  console.log(words);\n  return (\n    <div className=\"main_table\">\n      <table className=\"table\">\n        <caption className=\"table-name\">Words List</caption>\n        <thead>\n          <tr>\n            <th className=\"col\"> Word</th>\n            <th className=\"col\">Transcription</th>\n            <th className=\"col\">Translate</th>\n            <th className=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <EditableRow />\n          {words.map((word) => (\n            <TableRow\n              key={word.id}\n              word={word.english}\n              transcription={word.transcription}\n              translation={word.russian}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nexport default WordList;\n"]},"metadata":{},"sourceType":"module"}