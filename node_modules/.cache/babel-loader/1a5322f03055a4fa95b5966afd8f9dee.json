{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/InputWordListAdd/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Input.scss\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputForWord(props) {\n  _s();\n\n  const [imputData, setImputData] = useState({\n    word: \"\",\n    transcription: \"\",\n    translation: \"\"\n  });\n  const [imputDirty, setImputDirty] = useState(false);\n  const [error, setError] = useState(\"Поле не может быть пустым\");\n\n  const addImputData = event => setImputData({ ...imputData,\n    [event.target.name]: event.target.value\n  });\n\n  const {\n    word,\n    transcription,\n    translation\n  } = imputData;\n\n  const validate = () => {\n    if (word.trim() && transcription.trim() && translation.trim()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"rowAddWord\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [imputDirty && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: word,\n        onChange: e => addImputData(e),\n        name: \"word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [imputDirty && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: transcription,\n        onChange: e => addImputData(e),\n        name: \"transcription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [imputDirty && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: translation,\n        onChange: e => addImputData(e),\n        name: \"translation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonAdd, {\n          disabled: !validate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ButtonDel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(InputForWord, \"ag9FYECX4RsZgEc/PPg2xZFWIo4=\");\n\n_c = InputForWord;\nexport default InputForWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForWord\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/InputWordListAdd/Input.jsx"],"names":["React","useState","ButtonDel","ButtonAdd","InputForWord","props","imputData","setImputData","word","transcription","translation","imputDirty","setImputDirty","error","setError","addImputData","event","target","name","value","validate","trim","color","e"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Input.scss\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\n\nfunction InputForWord(props) {\n  const [imputData, setImputData]=useState({\nword:\"\",\ntranscription:\"\",\ntranslation:\"\"\n\n  });\n  const[imputDirty, setImputDirty]=useState(false);\n  const [error, setError]=useState(\"Поле не может быть пустым\");\n\n  const addImputData = event =>\n  setImputData({\n    ...imputData,\n    [event.target.name]: event.target.value\n  });\n   \n  const {word, transcription, translation} = imputData;\n   const validate = () => {\n      if (word.trim() && transcription.trim() && translation.trim()) {\n      return true\n    }\n    return false\n  }\n\n  return (\n\n      <tr className=\"rowAddWord\">\n      <td>\n      {(imputDirty && error) && <div style={{color:\"red\"}}>{error}</div>}\n    <input \n    className=\"addWord\" \n    placeholder=\"Enter\" \n    type=\"text\"\n    value={word} \n    onChange={e=>addImputData(e)} \n    name=\"word\"\n\n    />\n     </td>\n          <td>\n           {(imputDirty && error) && <div style={{color:\"red\"}}>{error}</div>}\n    <input className=\"addWord\" \n    placeholder=\"Enter\" \n    type=\"text\" \n    value={transcription} \n    onChange={e=>addImputData(e)} \n    name=\"transcription\"\n    />\n     </td>\n          <td>\n           {(imputDirty && error) && <div style={{color:\"red\"}}>{error}</div>}\n   <input className=\"addWord\" \n   placeholder=\"Enter\"  \n   type=\"text\" \n   value={translation} \n   onChange={e=>addImputData(e)} \n   name=\"translation\" \n   />\n     </td>\n       <td>\n        <div className=\"buttons\">\n        <ButtonAdd\n         disabled={!validate()}\n        />\n        <ButtonDel />\n        </div>\n      </td>\n        </tr>\n  );\n}\n\nexport default InputForWord;\n"]},"metadata":{},"sourceType":"module"}