{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/Card/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, forwardRef } from \"react\";\nimport \"./Card.scss\";\nimport ButtonTranslate from \"./ButtonTranslate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const ref = useRef();\n  useEffect(() => ref.current.focus(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-word\",\n        children: props.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-transcription\",\n        children: props.transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-translation\",\n        children: /*#__PURE__*/_jsxDEV(ButtonTranslate, {\n          ref: ref,\n          russian: props.translation,\n          onClick: () => {\n            props.onClick();\n\n            if (!props.isTranslationShown) {\n              props === null || props === void 0 ? void 0 : props.addToWords();\n            }\n          },\n          pressed: props.isTranslationShown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/Card/Card.jsx"],"names":["React","useEffect","useRef","forwardRef","ButtonTranslate","Card","props","ref","current","focus","word","transcription","translation","onClick","isTranslationShown","addToWords"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,UAAnC,QAAqD,OAArD;AACA,OAAO,aAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,MAAMM,GAAG,CAACC,OAAJ,CAAYC,KAAZ,EAAP,EAA4B,EAA5B,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4BH,KAAK,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBAAqCJ,KAAK,CAACK;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,GAAG,EAAEJ,GADP;AAEE,UAAA,OAAO,EAAED,KAAK,CAACM,WAFjB;AAGE,UAAA,OAAO,EAAE,MAAM;AACbN,YAAAA,KAAK,CAACO,OAAN;;AACA,gBAAI,CAACP,KAAK,CAACQ,kBAAX,EAA+B;AAC7BR,cAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAES,UAAP;AACD;AACF,WARH;AASE,UAAA,OAAO,EAAET,KAAK,CAACQ;AATjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAzBQT,I;;KAAAA,I;AA2BT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useRef, forwardRef } from \"react\";\nimport \"./Card.scss\";\nimport ButtonTranslate from \"./ButtonTranslate\";\n\nfunction Card(props) {\n  const ref = useRef();\n  useEffect(() => ref.current.focus(), []);\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <div className=\"card-word\">{props.word}</div>\n        <div className=\"card-transcription\">{props.transcription}</div>\n        <div className=\"card-translation\">\n          <ButtonTranslate\n            ref={ref}\n            russian={props.translation}\n            onClick={() => {\n              props.onClick();\n              if (!props.isTranslationShown) {\n                props?.addToWords();\n              }\n            }}\n            pressed={props.isTranslationShown}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}