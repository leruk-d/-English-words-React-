{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/CardContainer/CardContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport ButtonPrevious from \"../ButtonPrevious/ButtonPrevious\";\nimport ButtonNext from \"../ButtonNext/ButtonNext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst words = [{\n  id: \"peace\",\n  english: \"peace\",\n  transcription: \"[ piːs ]\",\n  russian: \"мир\"\n}, {\n  id: \"friendship\",\n  english: \"friendship\",\n  transcription: \"[ ˈfrendʃɪp ]\",\n  russian: \"дружба\"\n}, {\n  id: \"gum\",\n  english: \"gum\",\n  transcription: \"[ ɡʌm ]\",\n  russian: \"жвачка\"\n}];\n\nfunction CardContainer(props) {\n  _s();\n\n  const [selectedCardIndex, setSelectedCardIndex] = useState(0);\n\n  const handleClickNext = () => {\n    const newIdx = selectedCardIndex + 1;\n\n    if (newIdx < words.lenght) {\n      setSelectedCardIndex(newIdx);\n    }\n  };\n\n  const handleClickPrev = () => setSelectedCardIndex(selectedCardIndex - 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonNext, {\n      onClick: handleClickNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPrevious, {\n      onClick: handleClickPrev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      word: words[selectedCardIndex].english,\n      transcription: words[selectedCardIndex].transcription,\n      translation: words[selectedCardIndex].russian\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPrevious, {\n      onClick: handleClickPrev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [selectedCardIndex + 1, \"/\", words.lenght]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CardContainer, \"UUoFZ30AZqhwnaB177N+14YNSro=\");\n\n_c = CardContainer;\nexport default CardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/CardContainer/CardContainer.jsx"],"names":["React","useState","Card","ButtonPrevious","ButtonNext","words","id","english","transcription","russian","CardContainer","props","selectedCardIndex","setSelectedCardIndex","handleClickNext","newIdx","lenght","handleClickPrev"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,OAAO,EAAE,OAAxB;AAAiCC,EAAAA,aAAa,EAAE,UAAhD;AAA4DC,EAAAA,OAAO,EAAE;AAArE,CADY,EAEZ;AACEH,EAAAA,EAAE,EAAE,YADN;AAEEC,EAAAA,OAAO,EAAE,YAFX;AAGEC,EAAAA,aAAa,EAAE,eAHjB;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAFY,EASZ;AAAEH,EAAAA,EAAE,EAAE,KAAN;AAAaC,EAAAA,OAAO,EAAE,KAAtB;AAA6BC,EAAAA,aAAa,EAAE,SAA5C;AAAuDC,EAAAA,OAAO,EAAE;AAAhE,CATY,CAAd;;AAYA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,CAAD,CAA1D;;AAEA,QAAMa,eAAe,GAAG,MAAM;AAC5B,UAAMC,MAAM,GAAGH,iBAAiB,GAAG,CAAnC;;AACA,QAAIG,MAAM,GAAGV,KAAK,CAACW,MAAnB,EAA2B;AACzBH,MAAAA,oBAAoB,CAACE,MAAD,CAApB;AACD;AACF,GALD;;AAOA,QAAME,eAAe,GAAG,MAAMJ,oBAAoB,CAACD,iBAAiB,GAAG,CAArB,CAAlD;;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEE;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEG;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AACE,MAAA,IAAI,EAAEZ,KAAK,CAACO,iBAAD,CAAL,CAAyBL,OADjC;AAEE,MAAA,aAAa,EAAEF,KAAK,CAACO,iBAAD,CAAL,CAAyBJ,aAF1C;AAGE,MAAA,WAAW,EAAEH,KAAK,CAACO,iBAAD,CAAL,CAAyBH;AAHxC;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEQ;AAAzB;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,iBACGL,iBAAiB,GAAG,CADvB,OAC2BP,KAAK,CAACW,MADjC;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAeD;;GA3BQN,a;;KAAAA,a;AA6BT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport ButtonPrevious from \"../ButtonPrevious/ButtonPrevious\";\nimport ButtonNext from \"../ButtonNext/ButtonNext\";\n\nconst words = [\n  { id: \"peace\", english: \"peace\", transcription: \"[ piːs ]\", russian: \"мир\" },\n  {\n    id: \"friendship\",\n    english: \"friendship\",\n    transcription: \"[ ˈfrendʃɪp ]\",\n    russian: \"дружба\",\n  },\n\n  { id: \"gum\", english: \"gum\", transcription: \"[ ɡʌm ]\", russian: \"жвачка\" },\n];\n\nfunction CardContainer(props) {\n  const [selectedCardIndex, setSelectedCardIndex] = useState(0);\n\n  const handleClickNext = () => {\n    const newIdx = selectedCardIndex + 1;\n    if (newIdx < words.lenght) {\n      setSelectedCardIndex(newIdx);\n    }\n  };\n\n  const handleClickPrev = () => setSelectedCardIndex(selectedCardIndex - 1);\n\n  return (\n    <>\n      <ButtonNext onClick={handleClickNext} />\n      <ButtonPrevious onClick={handleClickPrev} />\n      <Card\n        word={words[selectedCardIndex].english}\n        transcription={words[selectedCardIndex].transcription}\n        translation={words[selectedCardIndex].russian}\n      ></Card>\n      <ButtonPrevious onClick={handleClickPrev} />\n      <span>\n        {selectedCardIndex + 1}/{words.lenght}\n      </span>\n    </>\n  );\n}\n\nexport default CardContainer;\n"]},"metadata":{},"sourceType":"module"}