{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/InputWordListAdd/Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Input.scss\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InputForWord(props) {\n  _s();\n\n  const [imputData, setImputData] = useState({\n    word: \"\",\n    transcription: \"\",\n    translation: \"\"\n  });\n  const [imputDirty, setImputDirty] = useState(false);\n  const [error, setError] = useState(\"Поле не может быть пустым\");\n\n  const addImputData = event => setImputData({ ...imputData,\n    [event.target.name]: event.target.value\n  });\n\n  const {\n    word,\n    transcription,\n    translation\n  } = imputData;\n\n  const blurHandler = event => {\n    switch (event.target.name) {\n      case word:\n        setImputDirty(true);\n        break;\n\n      case transcription:\n        setImputDirty(true);\n        break;\n\n      case translation:\n        setImputDirty(true);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"rowAddWord\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [imputDirty && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: word,\n        onChange: e => addImputData(e),\n        name: \"word\",\n        onBlur: e => blurHandler(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [imputDirty && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: transcription,\n        onChange: e => addImputData(e),\n        name: \"transcription\",\n        onBlur: e => blurHandler(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [imputDirty && error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"addWord\",\n        placeholder: \"Enter\",\n        type: \"text\",\n        value: translation,\n        onChange: e => addImputData(e),\n        name: \"translation\",\n        onBlur: e => blurHandler(e),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ButtonDel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n}\n\n_s(InputForWord, \"YZPsTGZvRuu8nAgTojaGyY+tssc=\");\n\n_c = InputForWord;\nexport default InputForWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForWord\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/InputWordListAdd/Input.jsx"],"names":["React","useState","ButtonDel","ButtonAdd","InputForWord","props","imputData","setImputData","word","transcription","translation","imputDirty","setImputDirty","error","setError","addImputData","event","target","name","value","blurHandler","color","e"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./Input.scss\";\nimport ButtonDel from \"../Buttons/ButtonDelete\";\nimport ButtonAdd from \"../Buttons/ButtonAdd\";\n\nfunction InputForWord(props) {\n  const [imputData, setImputData]=useState({\nword:\"\",\ntranscription:\"\",\ntranslation:\"\"\n  });\n  const[imputDirty, setImputDirty]=useState(false);\n  const [error, setError]=useState(\"Поле не может быть пустым\");\n\n  const addImputData = event =>\n  setImputData({\n    ...imputData,\n    [event.target.name]: event.target.value\n\n  });\n\n  const {word,transcription,translation} = imputData;\n\nconst blurHandler=event=>{\nswitch (event.target.name) {\n  case word:\n    setImputDirty(true)\n    break;\n  case transcription:\n    setImputDirty(true)\n    break;\n      case translation:\n    setImputDirty(true)\n    break;\n}\n}\n  return (\n\n      <tr className=\"rowAddWord\">\n      <td>\n      {(imputDirty && error) && <div style={{color:\"red\"}}>{error}</div>}\n    <input \n    className=\"addWord\" \n    placeholder=\"Enter\" \n    type=\"text\"\n    value={word} \n    onChange={e=>addImputData(e)} \n    name=\"word\"\n    onBlur={e=>blurHandler(e)}\n    required\n    />\n     </td>\n          <td>\n           {(imputDirty && error) && <div style={{color:\"red\"}}>{error}</div>}\n    <input className=\"addWord\" \n    placeholder=\"Enter\" \n    type=\"text\" \n    value={transcription} \n    onChange={e=>addImputData(e)} \n    name=\"transcription\"\n        onBlur={e=>blurHandler(e)}\n    required\n    />\n     </td>\n          <td>\n           {(imputDirty && error) && <div style={{color:\"red\"}}>{error}</div>}\n   <input className=\"addWord\" \n   placeholder=\"Enter\"  \n   type=\"text\" \n   value={translation} \n   onChange={e=>addImputData(e)} \n   name=\"translation\" \n       onBlur={e=>blurHandler(e)}\n   required\n   />\n     </td>\n       <td>\n        <div className=\"buttons\">\n        <ButtonAdd/>\n        <ButtonDel />\n        </div>\n      </td>\n        </tr>\n  );\n}\n\nexport default InputForWord;\n"]},"metadata":{},"sourceType":"module"}