{"ast":null,"code":"var _jsxFileName = \"/Volumes/Lera/\\u0423\\u0447\\u0435\\u0431\\u0430/-English-words-React-/myapp/src/components/CardContainer/CardContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useContext } from \"react\";\nimport Card from \"../Card/Card\";\nimport ButtonPrevious from \"../ButtonPrevious/ButtonPrevious\";\nimport ButtonNext from \"../ButtonNext/ButtonNext\";\nimport \"./CardContainer.scss\";\nimport DataContext from \"../../Context/Context\"; // const words = [\n//   {\n//     id: \"peace\",\n//     english: \"peace\",\n//     transcription: \"[ piːs ]\",\n//     russian: \"мир\",\n//     isTranslationShow: false,\n//   },\n//   {\n//     id: \"friendship\",\n//     english: \"friendship\",\n//     transcription: \"[ ˈfrendʃɪp ]\",\n//     russian: \"дружба\",\n//     isTranslationShow: false,\n//   },\n//   {\n//     id: \"gum\",\n//     english: \"gum\",\n//     transcription: \"[ ɡʌm ]\",\n//     russian: \"жвачка\",\n//     isTranslationShow: false,\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardContainer(props) {\n  _s();\n\n  const {\n    words\n  } = useContext(DataContext);\n  const [selectedCardIndex, setSelectedCardIndex] = useState(0);\n  const [data, updateTranslationState] = useState(words);\n  const [wordsCount, setWordsCount] = useState(0);\n\n  const handleClickNext = () => {\n    const newIdx = selectedCardIndex + 1;\n\n    if (newIdx < words.length) {\n      setSelectedCardIndex(newIdx);\n    }\n  };\n\n  const handleClickPrev = () => {\n    const newIndex = selectedCardIndex - 1;\n\n    if (newIndex >= 0) {\n      setSelectedCardIndex(newIndex);\n    }\n  };\n\n  const addToWords = useCallback(() => setWordsCount(wordsCount + 1), [wordsCount]);\n\n  const handleClickTranslation = isTranslationShown => {\n    const dataCopy = [...data];\n    dataCopy[selectedCardIndex].isTranslationShow = !dataCopy[selectedCardIndex].isTranslationShow;\n    updateTranslationState(dataCopy);\n\n    if (!isTranslationShown) {\n      addToWords();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"wordsCount\",\n      children: [\" \\u0438\\u0437\\u0443\\u0447\\u0435\\u043D\\u043E \", wordsCount, \" \\u0441\\u043B\\u043E\\u0432\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"oneCard\",\n      children: [/*#__PURE__*/_jsxDEV(ButtonPrevious, {\n        onClick: handleClickPrev,\n        disabled: selectedCardIndex === 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: words[selectedCardIndex].english,\n        transcription: words[selectedCardIndex].transcription,\n        translation: words[selectedCardIndex].russian,\n        onClick: () => handleClickTranslation(data[selectedCardIndex].isTranslationShow),\n        isTranslationShown: data[selectedCardIndex].isTranslationShow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonNext, {\n        onClick: handleClickNext,\n        disabled: selectedCardIndex === words.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"numberCard\",\n      children: [selectedCardIndex + 1, \"/\", words.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardContainer, \"4srmqoCnpot/xYXHicNTy1piRWM=\");\n\n_c = CardContainer;\nexport default CardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardContainer\");","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/components/CardContainer/CardContainer.jsx"],"names":["React","useState","useCallback","useContext","Card","ButtonPrevious","ButtonNext","DataContext","CardContainer","props","words","selectedCardIndex","setSelectedCardIndex","data","updateTranslationState","wordsCount","setWordsCount","handleClickNext","newIdx","length","handleClickPrev","newIndex","addToWords","handleClickTranslation","isTranslationShown","dataCopy","isTranslationShow","english","transcription","russian"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useContext } from \"react\";\nimport Card from \"../Card/Card\";\nimport ButtonPrevious from \"../ButtonPrevious/ButtonPrevious\";\nimport ButtonNext from \"../ButtonNext/ButtonNext\";\nimport \"./CardContainer.scss\";\nimport DataContext from \"../../Context/Context\";\n\n// const words = [\n//   {\n//     id: \"peace\",\n//     english: \"peace\",\n//     transcription: \"[ piːs ]\",\n//     russian: \"мир\",\n//     isTranslationShow: false,\n//   },\n//   {\n//     id: \"friendship\",\n//     english: \"friendship\",\n//     transcription: \"[ ˈfrendʃɪp ]\",\n//     russian: \"дружба\",\n//     isTranslationShow: false,\n//   },\n\n//   {\n//     id: \"gum\",\n//     english: \"gum\",\n//     transcription: \"[ ɡʌm ]\",\n//     russian: \"жвачка\",\n//     isTranslationShow: false,\n//   },\n// ];\n\nfunction CardContainer(props) {\n  const { words } = useContext(DataContext);\n  const [selectedCardIndex, setSelectedCardIndex] = useState(0);\n  const [data, updateTranslationState] = useState(words);\n  const [wordsCount, setWordsCount] = useState(0);\n\n  const handleClickNext = () => {\n    const newIdx = selectedCardIndex + 1;\n    if (newIdx < words.length) {\n      setSelectedCardIndex(newIdx);\n    }\n  };\n\n  const handleClickPrev = () => {\n    const newIndex = selectedCardIndex - 1;\n    if (newIndex >= 0) {\n      setSelectedCardIndex(newIndex);\n    }\n  };\n\n  const addToWords = useCallback(\n    () => setWordsCount(wordsCount + 1),\n    [wordsCount]\n  );\n\n  const handleClickTranslation = (isTranslationShown) => {\n    const dataCopy = [...data];\n    dataCopy[selectedCardIndex].isTranslationShow =\n      !dataCopy[selectedCardIndex].isTranslationShow;\n    updateTranslationState(dataCopy);\n    if (!isTranslationShown) {\n      addToWords();\n    }\n  };\n\n  return (\n    <div className=\"cardContainer\">\n      <span className=\"wordsCount\"> изучено {wordsCount} слов</span>\n      <div className=\"oneCard\">\n        <ButtonPrevious\n          onClick={handleClickPrev}\n          disabled={selectedCardIndex === 0}\n        />\n        <Card\n          word={words[selectedCardIndex].english}\n          transcription={words[selectedCardIndex].transcription}\n          translation={words[selectedCardIndex].russian}\n          onClick={() =>\n            handleClickTranslation(data[selectedCardIndex].isTranslationShow)\n          }\n          isTranslationShown={data[selectedCardIndex].isTranslationShow}\n        ></Card>\n        <ButtonNext\n          onClick={handleClickNext}\n          disabled={selectedCardIndex === words.length - 1}\n        />\n      </div>\n      <span className=\"numberCard\">\n        {selectedCardIndex + 1}/{words.length}\n      </span>\n    </div>\n  );\n}\n\nexport default CardContainer;\n"]},"metadata":{},"sourceType":"module"}