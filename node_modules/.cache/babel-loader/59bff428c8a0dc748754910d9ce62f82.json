{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\n\nclass DataStore {\n  constructor() {\n    this.data = [];\n    this.isLoading = false;\n    this.error = null;\n\n    this.loadData = () => {\n      fetch(\"http://itgirlschool.justmakeit.ru/api/words\").then(response => {\n        if (response.ok) {\n          //Проверяем что код ответа 200\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      }).then(response => this.data = response);\n    };\n\n    this.addNewWord = inputData => {\n      fetch(\"http://itgirlschool.justmakeit.ru/api/wordsadd\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        body: JSON.stringify({\n          english: inputData.word,\n          russian: inputData.translation,\n          transcription: inputData.transcription,\n          tags: []\n        })\n      }).then(response => {\n        if (response.ok) {\n          //Проверяем что код ответа 200\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      }).then(() => {\n        this.loadData();\n      });\n    };\n\n    this.deleteWord = id => {\n      fetch(`http://itgirlschool.justmakeit.ru/api/words/${id}/delete`, {\n        method: \"POST\"\n      }).then(response => {\n        if (response.ok) {\n          //Проверяем что код ответа 200\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      }).then(() => {\n        this.loadData();\n      });\n    };\n\n    this.updateWord = inputData => {\n      fetch(`http://itgirlschool.justmakeit.ru/api/words/${inputData.id}/update`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        body: JSON.stringify(inputData)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      }).then(() => {\n        this.loadData();\n      });\n    };\n\n    makeAutoObservable(this);\n    this.loadData();\n  }\n\n}\n\nexport default DataStore;","map":{"version":3,"sources":["/Volumes/Lera/Учеба/-English-words-React-/myapp/src/stores/DataStore.js"],"names":["makeAutoObservable","DataStore","constructor","data","isLoading","error","loadData","fetch","then","response","ok","json","Error","addNewWord","inputData","method","headers","body","JSON","stringify","english","word","russian","translation","transcription","tags","deleteWord","id","updateWord"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,MAAnC;;AAEA,MAAMC,SAAN,CAAgB;AAKdC,EAAAA,WAAW,GAAG;AAAA,SAJdC,IAIc,GAJP,EAIO;AAAA,SAHdC,SAGc,GAHF,KAGE;AAAA,SAFdC,KAEc,GAFN,IAEM;;AAAA,SAKdC,QALc,GAKH,MAAM;AACfC,MAAAA,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf;AACA,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAHD,MAGO;AACL,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OARH,EASGJ,IATH,CASSC,QAAD,IAAe,KAAKN,IAAL,GAAYM,QATnC;AAUD,KAhBa;;AAAA,SAkBdI,UAlBc,GAkBAC,SAAD,IAAe;AAC1BP,MAAAA,KAAK,CAAC,gDAAD,EAAmD;AACtDQ,QAAAA,MAAM,EAAE,MAD8C;AAEtDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6C;AAKtDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,OAAO,EAAEN,SAAS,CAACO,IADA;AAEnBC,UAAAA,OAAO,EAAER,SAAS,CAACS,WAFA;AAGnBC,UAAAA,aAAa,EAAEV,SAAS,CAACU,aAHN;AAInBC,UAAAA,IAAI,EAAE;AAJa,SAAf;AALgD,OAAnD,CAAL,CAYGjB,IAZH,CAYSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf;AACA,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAHD,MAGO;AACL,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OAnBH,EAoBGJ,IApBH,CAoBQ,MAAM;AACV,aAAKF,QAAL;AACD,OAtBH;AAuBD,KA1Ca;;AAAA,SA4CdoB,UA5Cc,GA4CAC,EAAD,IAAQ;AACnBpB,MAAAA,KAAK,CAAE,+CAA8CoB,EAAG,SAAnD,EAA6D;AAChEZ,QAAAA,MAAM,EAAE;AADwD,OAA7D,CAAL,CAGGP,IAHH,CAGSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf;AACA,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAHD,MAGO;AACL,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OAVH,EAWGJ,IAXH,CAWQ,MAAM;AACV,aAAKF,QAAL;AACD,OAbH;AAcD,KA3Da;;AAAA,SA6DdsB,UA7Dc,GA6DAd,SAAD,IAAe;AAC1BP,MAAAA,KAAK,CACF,+CAA8CO,SAAS,CAACa,EAAG,SADzD,EAEH;AACEZ,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFX;AAKEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,SAAf;AALR,OAFG,CAAL,CAUGN,IAVH,CAUSC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AACf,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD,SAFD,MAEO;AACL,gBAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;AACF,OAhBH,EAkBGJ,IAlBH,CAkBQ,MAAM;AACV,aAAKF,QAAL;AACD,OApBH;AAqBD,KAnFa;;AACZN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA,SAAKM,QAAL;AACD;;AARa;;AA2FhB,eAAeL,SAAf","sourcesContent":["import { makeAutoObservable } from \"mobx\";\n\nclass DataStore {\n  data = [];\n  isLoading = false;\n  error = null;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.loadData();\n  }\n\n  loadData = () => {\n    fetch(\"http://itgirlschool.justmakeit.ru/api/words\")\n      .then((response) => {\n        if (response.ok) {\n          //Проверяем что код ответа 200\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      })\n      .then((response) => (this.data = response));\n  };\n\n  addNewWord = (inputData) => {\n    fetch(\"http://itgirlschool.justmakeit.ru/api/wordsadd\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify({\n        english: inputData.word,\n        russian: inputData.translation,\n        transcription: inputData.transcription,\n        tags: [],\n      }),\n    })\n      .then((response) => {\n        if (response.ok) {\n          //Проверяем что код ответа 200\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      })\n      .then(() => {\n        this.loadData();\n      });\n  };\n\n  deleteWord = (id) => {\n    fetch(`http://itgirlschool.justmakeit.ru/api/words/${id}/delete`, {\n      method: \"POST\",\n    })\n      .then((response) => {\n        if (response.ok) {\n          //Проверяем что код ответа 200\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      })\n      .then(() => {\n        this.loadData();\n      });\n  };\n\n  updateWord = (inputData) => {\n    fetch(\n      `http://itgirlschool.justmakeit.ru/api/words/${inputData.id}/update`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\",\n        },\n        body: JSON.stringify(inputData),\n      }\n    )\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error(\"Something went wrong ...\");\n        }\n      })\n\n      .then(() => {\n        this.loadData();\n      });\n  };\n}\n\nexport default DataStore;\n"]},"metadata":{},"sourceType":"module"}